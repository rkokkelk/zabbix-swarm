<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.4</version>
    <date>2020-06-15T15:20:02Z</date>
    <groups>
        <group>
            <name>Templates/Applications</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template App Docker swarm</template>
            <name>Template App Docker swarm</name>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Docker swarm general</name>
                </application>
                <application>
                    <name>Docker swarm nodes</name>
                </application>
                <application>
                    <name>Docker swarm raw</name>
                </application>
                <application>
                    <name>Docker swarm services</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Docker swarm raw info</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>docker.swarm.info.raw</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Docker swarm raw</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker swarm leader node</name>
                    <type>DEPENDENT</type>
                    <key>docker.swarm.nodes.leader</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Docker swarm nodes</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$[?(@.ManagerStatus.Leader== &quot;true&quot;)].Description.Hostname.first()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.swarm.nodes.raw</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1</expression>
                            <name>Docker swarm leader node changed</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker swarm managers nodes</name>
                    <type>DEPENDENT</type>
                    <key>docker.swarm.nodes.manager</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Docker swarm nodes</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$[?(@.ManagerStatus.Reachability== 'reachable')].ID.length()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.swarm.nodes.raw</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker swarm nodes raw</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>docker.swarm.nodes.raw</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Docker swarm raw</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker swarm ready nodes</name>
                    <type>DEPENDENT</type>
                    <key>docker.swarm.nodes.ready</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Docker swarm nodes</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$[?(@.Status.State== 'ready')].ID.length()</params>
                            <error_handler>CUSTOM_VALUE</error_handler>
                            <error_handler_params>0</error_handler_params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.swarm.nodes.raw</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1</expression>
                            <name>Docker swarm ready nodes changed</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Docker swarm nodes</name>
                    <type>DEPENDENT</type>
                    <key>docker.swarm.nodes.total</key>
                    <delay>0</delay>
                    <applications>
                        <application>
                            <name>Docker swarm nodes</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$[?(@.ID!= 'nothing')].ID.length()</params>
                            <error_handler>CUSTOM_VALUE</error_handler>
                            <error_handler_params>0</error_handler_params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.swarm.nodes.raw</key>
                    </master_item>
                </item>
                <item>
                    <name>Docker swarm services raw</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>docker.swarm.services.raw</key>
                    <delay>5m</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Docker swarm raw</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker swarm tasks raw info</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>docker.swarm.tasks.raw.info</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Docker swarm raw</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Docker swarm updated at</name>
                    <type>DEPENDENT</type>
                    <key>docker.swarm.updated_at</key>
                    <delay>0</delay>
                    <units>unixtime</units>
                    <applications>
                        <application>
                            <name>Docker swarm general</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.UpdatedAt</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>return Math.floor(Date.parse(value) / 1000)</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>docker.swarm.info.raw</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{nodata(5m)}=1</expression>
                            <name>Docker swarm no info last 5 min</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Docker swarm nodes discovery</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>docker.swarm.nodes.lld</key>
                    <delay>1h</delay>
                    <status>DISABLED</status>
                    <lifetime>10d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>Node {#NAME} availability</name>
                            <type>DEPENDENT</type>
                            <key>docker.node.availability[{#ID}]</key>
                            <delay>0</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Spec.Availability</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.nodes[{#ID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Node {#NAME} engine version</name>
                            <type>DEPENDENT</type>
                            <key>docker.node.engine_version[{#ID}]</key>
                            <delay>0</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Description.Engine.EngineVersion</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.nodes[{#ID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Node {#NAME} manager status</name>
                            <type>DEPENDENT</type>
                            <key>docker.node.manager_status[{#ID}]</key>
                            <delay>0</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.ManagerStatus.Reachability</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.nodes[{#ID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Node {#NAME} resources CPUs</name>
                            <type>DEPENDENT</type>
                            <key>docker.node.resources.cpu[{#ID}]</key>
                            <delay>0</delay>
                            <units>Hz</units>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Description.Resources.NanoCPUs</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.nodes[{#ID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Node {#NAME} resources memory</name>
                            <type>DEPENDENT</type>
                            <key>docker.node.resources.mem[{#ID}]</key>
                            <delay>0</delay>
                            <units>B</units>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Description.Resources.MemoryBytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.nodes[{#ID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Node {#NAME} role</name>
                            <type>DEPENDENT</type>
                            <key>docker.node.role[{#ID}]</key>
                            <delay>0</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Spec.Role</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.nodes[{#ID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Node {#NAME} status</name>
                            <type>DEPENDENT</type>
                            <key>docker.node.status[{#ID}]</key>
                            <delay>0</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Status.State</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.nodes[{#ID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Raw data node {#NAME} at {#ADDR}</name>
                            <type>ZABBIX_ACTIVE</type>
                            <key>docker.nodes[{#ID}]</key>
                            <delay>5m</delay>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                        </item_prototype>
                    </item_prototypes>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#ADDR}</lld_macro>
                            <path>$.Status.Addr</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#ID}</lld_macro>
                            <path>$.ID</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#NAME}</lld_macro>
                            <path>$.Description.Hostname</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
                <discovery_rule>
                    <name>Docker swarm services discovery</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>docker.swarm.services.lld</key>
                    <delay>5m</delay>
                    <lifetime>10d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>Docker swarm uptime {#SERVICE}</name>
                            <type>DEPENDENT</type>
                            <key>docker.swarm.service.uptime[{#SERVICE}]</key>
                            <delay>0</delay>
                            <units>uptime</units>
                            <applications>
                                <application>
                                    <name>Docker swarm services</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.ID == '{#ID}')].UpdatedAt.first()</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>return Math.floor((Date.now() - Date.parse(value)) / 1000)</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.swarm.services.raw</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&lt;600</expression>
                                    <name>Docker swarm updated service {#SERVICE}</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Docker swarm number running tasks for {#SERVICE}</name>
                            <type>DEPENDENT</type>
                            <key>docker.swarm.tasks.running[{#SERVICE}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Docker swarm services</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[?(@.Status.State == 'running' &amp;&amp; @.ServiceID == '{#ID}')].length()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.swarm.tasks.raw.info</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}=0</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{avg(30m)}&lt;1</recovery_expression>
                                    <name>Docker swarm no running tasks for {#SERVICE}</name>
                                    <priority>AVERAGE</priority>
                                    <manual_close>YES</manual_close>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{diff()}=1</expression>
                                    <name>Docker swarm no running tasks for {#SERVICE} changed</name>
                                    <priority>AVERAGE</priority>
                                    <manual_close>YES</manual_close>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#ID}</lld_macro>
                            <path>$.ID</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SERVICE}</lld_macro>
                            <path>$.Spec.Name</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#STACK}</lld_macro>
                            <path>$.Spec.Labels['com.docker.stack.namespace']</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
            </discovery_rules>
        </template>
    </templates>
</zabbix_export>
